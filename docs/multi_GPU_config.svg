<svg width="1200" height="800" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <rect width="1200" height="800" fill="#ffffff" stroke="#ccc" stroke-width="1"/>
  
  <!-- Title -->
  <text x="600" y="25" text-anchor="middle" font-family="Arial" font-size="18" font-weight="bold" fill="#2c3e50">
    LambdaLabs 4x RTX 3070 Multi-GPU Configuration
  </text>
  
  <!-- System specs -->
  <rect x="50" y="40" width="1100" height="60" fill="#ecf0f1" stroke="#2c3e50"/>
  <text x="600" y="60" text-anchor="middle" font-family="Arial" font-size="14" font-weight="bold" fill="#2c3e50">
    System: 4x NVIDIA RTX 3070 (8GB each) + 48 CPU cores
  </text>
  <text x="600" y="80" text-anchor="middle" font-family="Arial" font-size="12" fill="#7f8c8d">
    Total: 20,480 CUDA cores, 31.2GB GPU memory, 8.6 compute capability (Ampere)
  </text>
  
  <!-- Single GPU specs -->
  <text x="50" y="130" font-family="Arial" font-size="14" font-weight="bold" fill="#2c3e50">
    Per RTX 3070 Specifications:
  </text>
  
  <rect x="100" y="145" width="1000" height="80" fill="#f8f9fa" stroke="#3498db" stroke-width="2"/>
  <text x="120" y="170" font-family="Arial" font-size="12" fill="#2c3e50">
    • 5,120 CUDA cores (46 SMs × ~112 cores/SM)
  </text>
  <text x="120" y="185" font-family="Arial" font-size="12" fill="#2c3e50">
    • 8GB GDDR6 memory (448 GB/s bandwidth)
  </text>
  <text x="120" y="200" font-family="Arial" font-size="12" fill="#2c3e50">
    • Maximum 1024 threads per block, 65536 blocks per grid dimension
  </text>
  <text x="600" y="170" font-family="Arial" font-size="12" fill="#e74c3c">
    • Typical kernel launch: 256 threads/block, ~2048 blocks
  </text>
  <text x="600" y="185" font-family="Arial" font-size="12" fill="#e74c3c">
    • Total active threads per GPU: ~524,288 threads
  </text>
  <text x="600" y="200" font-family="Arial" font-size="12" fill="#e74c3c">
    • Occupancy: ~16 warps per SM = ~50% theoretical max
  </text>
  
  <!-- Multi-GPU distribution -->
  <text x="50" y="250" font-family="Arial" font-size="14" font-weight="bold" fill="#2c3e50">
    Multi-GPU Work Distribution (Variance Ratio Computation):
  </text>
  
  <!-- GPU 0 -->
  <rect x="50" y="270" width="270" height="100" fill="#e8f4fd" stroke="#3498db" stroke-width="2"/>
  <text x="185" y="290" text-anchor="middle" font-family="Arial" font-size="12" font-weight="bold" fill="#2980b9">
    GPU 0 (CUDA Device 0)
  </text>
  <text x="70" y="310" font-family="Arial" font-size="10" fill="#2c3e50">
    Horizons: h[0], h[1], h[2], ...
  </text>
  <text x="70" y="325" font-family="monospace" font-size="9" fill="#3498db">
    Grid: 2048 blocks × 256 threads = 524K threads
  </text>
  <text x="70" y="340" font-family="monospace" font-size="9" fill="#3498db">
    stride = 256 × 2048 = 524,288
  </text>
  <text x="70" y="355" font-family="Arial" font-size="9" fill="#7f8c8d">
    Stream 0, cuBLAS handle, 10M workspace
  </text>
  
  <!-- GPU 1 -->
  <rect x="330" y="270" width="270" height="100" fill="#fff5f5" stroke="#e74c3c" stroke-width="2"/>
  <text x="465" y="290" text-anchor="middle" font-family="Arial" font-size="12" font-weight="bold" fill="#c0392b">
    GPU 1 (CUDA Device 1)
  </text>
  <text x="350" y="310" font-family="Arial" font-size="10" fill="#2c3e50">
    Horizons: h[chunk_size+1], h[chunk_size+2], ...
  </text>
  <text x="350" y="325" font-family="monospace" font-size="9" fill="#e74c3c">
    Grid: 2048 blocks × 256 threads = 524K threads
  </text>
  <text x="350" y="340" font-family="monospace" font-size="9" fill="#e74c3c">
    stride = 256 × 2048 = 524,288
  </text>
  <text x="350" y="355" font-family="Arial" font-size="9" fill="#7f8c8d">
    Stream 1, cuBLAS handle, 10M workspace
  </text>
  
  <!-- GPU 2 -->
  <rect x="610" y="270" width="270" height="100" fill="#f0fff0" stroke="#27ae60" stroke-width="2"/>
  <text x="745" y="290" text-anchor="middle" font-family="Arial" font-size="12" font-weight="bold" fill="#196f3d">
    GPU 2 (CUDA Device 2)
  </text>
  <text x="630" y="310" font-family="Arial" font-size="10" fill="#2c3e50">
    Horizons: h[2×chunk_size+1], ...
  </text>
  <text x="630" y="325" font-family="monospace" font-size="9" fill="#27ae60">
    Grid: 2048 blocks × 256 threads = 524K threads
  </text>
  <text x="630" y="340" font-family="monospace" font-size="9" fill="#27ae60">
    stride = 256 × 2048 = 524,288
  </text>
  <text x="630" y="355" font-family="Arial" font-size="9" fill="#7f8c8d">
    Stream 2, cuBLAS handle, 10M workspace
  </text>
  
  <!-- GPU 3 -->
  <rect x="890" y="270" width="270" height="100" fill="#fff9e6" stroke="#f39c12" stroke-width="2"/>
  <text x="1025" y="290" text-anchor="middle" font-family="Arial" font-size="12" font-weight="bold" fill="#e67e22">
    GPU 3 (CUDA Device 3)
  </text>
  <text x="910" y="310" font-family="Arial" font-size="10" fill="#2c3e50">
    Horizons: h[3×chunk_size+1], ...
  </text>
  <text x="910" y="325" font-family="monospace" font-size="9" fill="#f39c12">
    Grid: 2048 blocks × 256 threads = 524K threads
  </text>
  <text x="910" y="340" font-family="monospace" font-size="9" fill="#f39c12">
    stride = 256 × 2048 = 524,288
  </text>
  <text x="910" y="355" font-family="Arial" font-size="9" fill="#7f8c8d">
    Stream 3, cuBLAS handle, 10M workspace
  </text>
  
  <!-- Typical launch parameters -->
  <text x="50" y="400" font-family="Arial" font-size="14" font-weight="bold" fill="#2c3e50">
    Typical Kernel Launch Configuration:
  </text>
  
  <rect x="100" y="420" width="1000" height="120" fill="#2c3e50" stroke="#34495e" stroke-width="2"/>
  <text x="120" y="445" font-family="monospace" font-size="12" fill="#3498db">
    // For 100K data points per GPU
  </text>
  <text x="120" y="465" font-family="monospace" font-size="12" fill="#f39c12">
    int blockSize = 256;  // Threads per block
  </text>
  <text x="120" y="485" font-family="monospace" font-size="12" fill="#f39c12">
    int gridSize = (data_size + blockSize - 1) / blockSize;
  </text>
  <text x="120" y="505" font-family="monospace" font-size="12" fill="#e74c3c">
    // gridSize = (100000 + 255) / 256 = 391 blocks
  </text>
  <text x="120" y="525" font-family="monospace" font-size="12" fill="#27ae60">
    computeHPeriodReturns&lt;&lt;&lt;gridSize, blockSize, 0, stream&gt;&gt;&gt;(...)
  </text>
  
  <!-- Performance scaling -->
  <text x="50" y="570" font-family="Arial" font-size="14" font-weight="bold" fill="#2c3e50">
    Performance Scaling Analysis:
  </text>
  
  <rect x="50" y="590" width="550" height="120" fill="#f8f9fa" stroke="#2c3e50" stroke-width="2"/>
  <text x="70" y="615" font-family="Arial" font-size="12" font-weight="bold" fill="#e74c3c">
    Single GPU Performance:
  </text>
  <text x="90" y="635" font-family="Arial" font-size="11" fill="#2c3e50">
    • 100K returns: ~391 blocks × 256 threads = ~100K active threads
  </text>
  <text x="90" y="650" font-family="Arial" font-size="11" fill="#2c3e50">
    • Each thread processes multiple h-period sums via grid-stride
  </text>
  <text x="90" y="665" font-family="Arial" font-size="11" fill="#2c3e50">
    • Memory throughput: ~400-600 GB/s effective
  </text>
  <text x="90" y="680" font-family="Arial" font-size="11" fill="#2c3e50">
    • Variance ratio computation: ~50-100K points/ms per GPU
  </text>
  <text x="90" y="695" font-family="Arial" font-size="11" fill="#7f8c8d">
    • GPU utilization: 60-80% (memory bound for large datasets)
  </text>
  
  <rect x="620" y="590" width="530" height="120" fill="#f0f8ff" stroke="#3498db" stroke-width="2"/>
  <text x="640" y="615" font-family="Arial" font-size="12" font-weight="bold" fill="#2980b9">
    4-GPU Aggregate Performance:
  </text>
  <text x="660" y="635" font-family="Arial" font-size="11" fill="#2c3e50">
    • Total throughput: 200-400K points/ms (4× single GPU)
  </text>
  <text x="660" y="650" font-family="Arial" font-size="11" fill="#2c3e50">
    • Horizon parallelization: Different h values per GPU
  </text>
  <text x="660" y="665" font-family="Arial" font-size="11" fill="#2c3e50">
    • CPU orchestration: 48 cores handle OpenMP threading
  </text>
  <text x="660" y="680" font-family="Arial" font-size="11" fill="#2c3e50">
    • Total memory: 31.2GB allows massive datasets
  </text>
  <text x="660" y="695" font-family="Arial" font-size="11" fill="#27ae60">
    • Linear scaling efficiency: ~95% for compute-bound kernels
  </text>
  
  <!-- Real-world example -->
  <text x="50" y="740" font-family="Arial" font-size="14" font-weight="bold" fill="#2c3e50">
    Your Dashboard Results Context:
  </text>
  
  <rect x="50" y="755" width="1100" height="40" fill="#27ae60" stroke="#196f3d" stroke-width="2"/>
  <text x="600" y="775" text-anchor="middle" font-family="Arial" font-size="12" fill="white" font-weight="bold">
    VR Throughput: 173K-280K pts/ms | ACF Throughput: 66K-234K pts/ms
  </text>
  <text x="600" y="790" text-anchor="middle" font-family="Arial" font-size="11" fill="white">
    Your system efficiently utilizes all 4 GPUs with ~95% scaling efficiency for variance ratio computations
  </text>
</svg>
